version: '3'
networks:
  pizza-shop.net:
    driver: bridge
services:

  # service api.pizza-shop.gateway : api centrale pour l'ensemble des services qui renvoie vers les autres api
  api.pizza-shop.gateway:
    image: 'canals/php:8.2'
    env_file: ./cat.env
    ports:
      - '4080:80'
      - '3443:443'
    volumes:
      - ../gateway.pizza-shop/public:/var/www/html
      - ../gateway.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.catalog.local


  # service api.pizza-shop.commandes : api pour la prise de commandes
  api.pizza-shop.commandes:
    image: 'canals/php:8.2'
    env_file: ./shop.env
    ports:
      - '2080:80'
      - '1443:443'
    volumes:
      - ../commande.pizza-shop/public:/var/www/html
      - ../commande.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.local
    depends_on:
      rabbitmq:
        condition: service_healthy
      api.pizza-shop.catalog:
        condition: service_started
      pizza-shop.commande.db:
        condition: service_started
      pizza-shop.catalogue.db:
        condition: service_started

  # service api.pizza-shop.catalog : api pour la consultation du catalogue + création de commandes, etc ...
  api.pizza-shop.catalog:
    image: 'canals/php:8.2'
    env_file: ./cat.env
    ports:
      - '3080:80'
      - '2443:443'
    volumes:
        - ../catalog.pizza-shop/public:/var/www/html
        - ../catalog.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.catalog.local
    depends_on:
        - pizza-shop.catalogue.db


  # service sql pour le stockage des commandes -
  # utilisé par l'api order
  pizza-shop.commande.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./shop.env
    ports:
      - '3307:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../commande.pizza-shop/sql:/var/sql

  # service sql pour le catalogue des pizzas -
  # utilisé par l'api order
  pizza-shop.catalogue.db:
    image: 'postgres:latest'
    env_file: ./cat.env
    ports:
      - '5432:5432'
    networks:
      - pizza-shop.net
    volumes:
      - ../commande.pizza-shop/sql:/var/sql'
  #
  # service administration des bases sql
  #
  adminer:
    image: adminer
    env_file: ./shop.env
    ports:
      - '8080:8080'
    networks:
      - pizza-shop.net

######################################
###  AUTH Service : service d'authentification JWT
###  api api.auth : auth, check, refresh de token JWT
###  utilise sa propre base de données
######################################
  api.pizza-auth:
    image: 'canals/php:8.2'
    env_file: ./auth.env
    ports:
      - '2780:80'
      - '2743:443'
    volumes:
      - ../auth.pizza-shop/public:/var/www/html
      - ../auth.pizza-shop:/var/www
    working_dir: /var/www
    networks:
      pizza-shop.net:
        aliases:
          - auth.pizza-shop.local
    depends_on:
      rabbitmq:
        condition: service_healthy
      pizza-shop.auth.db:
        condition: service_started


  pizza-shop.auth.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./auth.env
    ports:
      - '3308:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../auth.pizza-shop/sql:/var/sql

  #######################################
  ### RabbitMQ Service
  ###
  #######################################
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '15672:15672'
      - '5672:5672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 8s
      timeout: 30s
      retries: 3
    networks:
      - pizza-shop.net
    volumes:
      - ./rabbitmq_dir:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  #######################################
  ###  Service Websocket Notifications
  #######################################
  notification-service:
    image: node:20-alpine
    ports:
      - "3000:3000"
    volumes:
      - ../notification-service:/app
    working_dir: /app
    command: sh -c "npm install && npm start"
    networks:
      - pizza-shop.net
    environment:
      - NODE_ENV=production
    depends_on:
      - rabbitmq

  pizza-shop.production.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./production.env
    ports:
      - '3309:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../production.pizza-shop/src/sql:/var/sql

  api.production:
    image: 'node:alpine'
    networks:
      - pizza-shop.net
    working_dir: /usr/app
    command: sh -c "npm i && npm run watch" #for development only
    #command: sh -c "npm i && npm start" #for production only
    volumes:
      - ../production.pizza-shop:/usr/app
    ports:
      - '3333:3000'
    env_file:
      - ./production.env
